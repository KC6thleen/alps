/*------------------------------------*\
    $WRAPPERS & CONTAINERS
\*------------------------------------*/

/**
 * Layout containers - keep content centered and within a maximum width. Also
 * adjusts left and right padding as the viewport widens.
 */

.l-container {
  max-width: $max-width;
  margin: 0 auto;
  position: relative;
  padding-left: $pad;
  padding-right: $pad;
  width: 100%;

  @include media('>large') {
    padding-left: $pad;
    padding-right: $pad;
  }

  @include media('>xxlarge') {
    padding-left: 0;
    padding-right: 0;
  }
}

.l-container--s {
  max-width: rem(650);
}

.l-container--s-m {
  max-width: rem(700);
}

.l-container--m {
  max-width: rem(800);
}

.l-container--l {
  max-width: rem(1000);
}

.l-container--xl {
  max-width: rem(1250);
}

.l-container-grid--7-col {
  position: relative;

  &::before {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin-right: auto;
    margin-left: auto;
    width: calc(100% - (2 * var(--offset)));
    //max-width: var(--max_width);
    min-height: 100vh;
    content: '';
    background-image: var(--background-columns);
    background-size: var(--background-width) 100%;
    z-index: 1000;
    pointer-events: none;
  }
}

// Stretch out of layout container.
.l-full--until-large {
  @include media('<=large') {
    padding-left: 0;
    padding-right: 0;
  }
}

/**
 * Wrapping element to keep content contained and centered.
 */
.l-wrap {
  max-width: $max-width;
  margin: 0 auto;
}

/*------------------------------------*\
    $LAYOUTS
\*------------------------------------*/

.l-column--primary {
  padding-top: $pad-and-half;
  padding-bottom: $pad;

  @include media('>medium') {
    padding-top: $pad-double;
  }

  @include media('>large') {
    padding-bottom: $pad-double;
  }

  @include media('>xlarge') {
    padding-top: rem(80);
  }
}

.l-column--secondary {
  padding-top: $pad-and-half;
  padding-bottom: $pad-and-half;
  background-color: $c-beige;

  @include media('>medium') {
    padding-top: $pad-double;
    padding-bottom: $pad-double;
  }
}

// Padding for main content column
.u-padding--primary {
  padding-left: $pad;
  padding-right: $pad;

  @include media('>large') {
    padding-left: rem(60);
    padding-right: rem(60);
  }
}

// Padding for secondary column
.u-padding--secondary {
  padding-left: $pad;
  padding-right: $pad;

  @include media('>large') {
    padding-left: $pad-double;
    padding-right: $pad-double;
  }
}

.u-padding--secondary--for-breakouts {
  padding: $pad-and-half;

  @include media('>large') {
    padding: rem(50);
  }
}

/*------------------------------------*\
    $LAYOUT SHIFTERS
\*------------------------------------*/

/**
 * Shift at 900px (large breakpoint) with fluid left and right columns.
 */
.l-flex-container {
  @include media('>large') {
    display: flex;
    align-items: stretch;
  }
}

.l-shift-left--fluid {
  width: 100%;

  @include media('>large') {
    width: 68%;
  }
}

.l-shift-right--fluid {
  width: 100%;

  @include media('>large') {
    width: 31%;
  }
}

/**
 * Reverse the column and row of any shift layout.
 */
.l-shift--reversed {
  display: flex;
  flex-wrap: wrap;

  @include media('>large') {
    flex-direction: row-reverse;
  }
}

/**
 * Shift at 900px (large breakpoint) with static right rail.
 */
.l-shift-left--static {
  width: 100%;

  @include media('>large') {
    margin-right: rem(-300);
  }
}

.l-shift-left--inner--static {
  @include media('>large') {
    margin-right: rem(300);
  }
}

.l-shift-right--static {
  width: 100%;

  @include media('>large') {
    width: rem(300);
    position: relative;
    z-index: 1;
  }
}
