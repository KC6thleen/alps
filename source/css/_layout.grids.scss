/*------------------------------------*\
    $GRIDS
\*------------------------------------*/

/**
 * Grid Container
 */
.l-grid {
  //overflow: hidden;
}

/**
 * Grid Item
 */
.l-grid-item {
  width: 100%;
  img {
    display: block;
  }
  > * {
    width: 100%;
  }
  @include media('>medium') {
    &.left-gutter--l { padding-left: rem(30); }
    &.right-gutter--l { padding-right: rem(30); }
    &.left-gutter--xl { padding-left: rem(60); }
    &.right-gutter--xl { padding-right: rem(60); }
  }
}

/**
 * Flip column order
 */
.l-grid--flip-columns {
  @include media('>medium') {
    & > .l-grid-item:nth-child(1) {
      order: 2;
    }
    & > .l-grid-item:nth-child(2) {
      order: 1;
    }
  }
}

/**
 * Grid Item Held - Check the specific grids below for how long it's held.
 */
@mixin l-grid-item--hold {
  width: 100%;
  float: none;
  clear: both;
}

/**
 * Grid Uniform - For grids that should line up evenly (these grids should not
 * use <hr>'s to separate individual grid items).
 */
.l-grid--uniform {
  > .l-grid-item {
    border-bottom: $border-style-light;
  }
}

/**
 * Grid 1up
 */
.l-grid--1-col {
  .l-grid-item {
    width: 100%;
  }
}

/**
 * Grid 2up at medium width.
 */
.l-grid--2-col--at-medium {
  @include media('>medium') {
    display: flex;
    flex-wrap: wrap;
    width: 100%;

    > .l-grid-item {
      float: left;
      width: 50%;
      align-items: stretch;
      display: flex;
      margin-top: 0;

      // Slick slider hack for when a carousel is contained within a flexed element.
      * {
        min-height: 0;
        min-width: 0;
      }
    }

    &.with-divider {
      > .l-grid-item:nth-child(odd) {
        position: relative;

        &:after {
          content: "";
          position: absolute;
          right: 0;
          width: 1px;
          border-right: $border-style-light;
          height: 100%;
          z-index: 10;
        }
      }
    }
  }
}

/**
 * Grid 3up at medium width.
 */
.l-grid--3-col--at-medium {
  @include media('>medium') {
    display: flex;
    flex-wrap: wrap;
    width: 100%;

    > .l-grid-item {
      float: left;
      width: 33.3333%;
      align-items: stretch;
      display: flex;
      margin-top: 0;

      // Slick slider hack for when a carousel is contained within a flexed element.
      * {
        min-height: 0;
        min-width: 0;
      }
    }

    &.with-gutters {
      > .l-grid-item:nth-child(3n+1) {
        padding-right: $pad;
      }

      > .l-grid-item:nth-child(3n+2) {
        padding-left: $pad-half;
        padding-right: $pad-half;
      }

      > .l-grid-item:nth-child(3n+3) {
        padding-left: $pad;
      }
    }

    &.with-divider {
      > .l-grid-item:nth-child(3n+1), > .l-grid-item:nth-child(3n+2) {
        position: relative;

        &:after {
          content: "";
          position: absolute;
          right: 0;
          width: 1px;
          border-right: $border-style-light;
          height: 100%;
          z-index: 10;
        }
      }
    }
  }
}

/**
 * Grid 2up at medium width with 70/30 split.
 */
.l-grid--2-col--70-30--at-medium {
  @include media('>medium') {
    display: flex;
    flex-wrap: wrap;
    width: 100%;

    > .l-grid-item {
      float: left;
      align-items: stretch;
      display: flex;
      margin-top: 0;

      // Slick slider hack for when a carousel is contained within a flexed element.
      * {
        min-height: 0;
        min-width: 0;
      }

      &:first-child {
        width: 70%;
      }

      &:last-child {
        width: 30%;
      }
    }
  }
}

/**
 * Grid 2up at medium width with 35/65 split.
 */
.l-grid--2-col--35-65--at-medium {
  @include media('>medium') {
    display: flex;
    flex-wrap: wrap;
    width: 100%;

    > .l-grid-item {
      float: left;
      align-items: stretch;
      display: flex;
      margin-top: 0;

      &:first-child {
        width: 35%;
      }

      &:last-child {
        width: 65%;
      }
    }
  }
}

/**
 * Grid always 2 columns even
 */
.l-grid--2-col--split {
  display: flex;
  flex-wrap: wrap;
  width: 100%;

  > .l-grid-item {
    float: left;
    width: 50%;
    display: flex;
    flex-wrap: wrap;
    margin-top: 0;
  }
}

/**
 * Grid 4up
 */
.l-grid--4-col {
  width: 100%;

  > * {
    width: 25%;
  }
}

.l-grid--7-col {
  width: 100%;

  > * {
    width: calc(100%/7);
  }

  &--l--offset-1 {
    @include media('>large') {
      margin-left: calc(100%/7);
      width: calc(100% - 100%/7);
    }
  }

  .l-grid-item--s {
    &--1-col {
      width: 100%;
    }
  }

  @include media('>medium') {
    display: flex;
    flex-direction: row;
    justify-content: space-between;

    .l-grid-item--m {
      &--1-col {
        width: calc(100%/7*1);
      }

      &--2-col {
        width: calc(100%/7*2);
      }

      &--3-col {
        width: calc(100%/7*3);
      }

      &--4-col {
        width: calc(100%/7*4);
      }

      &--5-col {
        width: calc(100%/7*5);
      }
    }
  }

  @include media('>large') {
    .l-grid-item--l {
      &--1-col {
        width: calc(100%/7*1);
      }

      &--2-col {
        width: calc(100%/7*2);
      }

      &--3-col {
        width: calc(100%/7*3);
      }

      &--4-col {
        width: calc(100%/7*4);
      }
    }
  }
}
