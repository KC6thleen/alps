/* ------------------------------------*\
    $GRIDS
\*------------------------------------ */

$gutter: 1.875rem; // 30px

/**
 * Simple grid - keep adding more elements to the row until the max is hit
 * (based on the flex-basis for each item), then start new row.
 */
.l-grid {
  display: flex;
  display: inline-flex;
  flex-flow: row wrap;
}

/**
 * Fixed Gutters
 */
@mixin column-gutters() {
  padding-left: $gutter;
  padding-right: $gutter;

  @include media ('>xlarge') {
    &.u-left-gutter--l {
      padding-left: rem(30);
    }

    &.u-right-gutter--l {
      padding-right: rem(30);
    }

    &.u-left-gutter--xl {
      padding-left: rem(60);
    }

    &.u-right-gutter--xl {
      padding-right: rem(60);
    }
  }
}

[class*="grid--"] {
  &.u-no-gutters {
    margin-left: 0;
    margin-right: 0;

    > .l-grid-item {
      padding-left: 0;
      padding-right: 0;
    }
  }

  > .l-grid-item {
    box-sizing: border-box;

    @include column-gutters();
  }
}

@mixin layout-in-column {
  // margin-left: -1 * $space;
  // margin-right: -1 * $space;
  //
  // @include media ('>xlarge') {
  //   margin-left: -1 * $space;
  //   margin-right: -1 * $space;
  // }
}

[class*="l-grid--"] {
  @include layout-in-column;
}

.l-grid-item {
  width: 100%;
  box-sizing: border-box;
}

/**
* 1 to 2 column grid at 50% each.
*/
.l-grid--50-50 {
  @include media ('>medium') {
    width: 100%;

    > * {
      width: 50%;
    }
  }
}

/**
 * 3 column grid
 */
.l-grid--3-col {
  @include media ('>medium') {
    width: 100%;

    > * {
      width: 33.3333%;
    }
  }
}

/**
 * 4 column grid
 */
.l-grid--4-col {
  width: 100%;

  @include media ('>medium') {
    > * {
      width: 50%;
    }
  }

  @include media ('>large') {
    > * {
      width: 25%;
    }
  }
}

/**
 * Grid 7up
 */
.l-grid--7-col {
  width: 100%;

  &--inner {
    margin-left: -$gutter;
    margin-right: -$gutter;
  }

  > * {
    padding-left: $gutter/2;
    padding-right: $gutter/2;

    @include media('>medium') {
      width: calc(100vw / 7);
      padding-left: $gutter;
      padding-right: $gutter;
    }
  }

  &--l--offset-1 {
    @include media('>large') {
      margin-left: calc(100vw / 7);
    }
  }

  .l-grid-item {
    width: 100%;
  }

  .l-grid-item--s {
    &--1-col {
      width: calc((100vw / 7) * 1);
    }

    &--2-col {
      width: calc((100vw / 7) * 2);
    }

    &--3-col {
      width: calc((100vw / 7) * 3);
    }

    &--4-col {
      width: calc((100vw / 7) * 4);
    }

    &--5-col {
      width: calc((100vw / 7) * 5);
    }

    &--6-col {
      width: calc((100vw / 7) * 6);
    }
  }

  @include media('>medium') {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;

    .l-grid-item--m {
      &--1-col {
        width: calc((100vw / 7) * 1);
      }

      &--2-col {
        width: calc((100vw / 7) * 2);
      }

      &--3-col {
        width: calc((100vw / 7) * 3);
      }

      &--4-col {
        width: calc((100vw / 7) * 4);
      }

      &--5-col {
        width: calc((100vw / 7) * 5);
      }

      &--6-col {
        width: calc((100vw / 7) * 6);
      }
    }
  }

  @include media('>large') {
    .l-grid-item--l {
      &--1-col {
        width: calc((100vw / 7) * 1);
      }

      &--2-col {
        width: calc((100vw / 7) * 2);
      }

      &--3-col {
        width: calc((100vw / 7) * 3);
      }

      &--4-col {
        width: calc((100vw / 7) * 4);
      }

      &--5-col {
        width: calc((100vw / 7) * 5);
      }

      &--6-col {
        width: calc((100vw / 7) * 6);
      }
    }
  }
}

.l-grid-wrap {
  // > * {
  //   margin: 0 $space*1.5 !important;
  // }

  @include media('>small') {
    &--1-of-7 {
      width: calc((100vw / 7) * 1);
      overflow: hidden;
    }

    &--2-of-7 {
      width: calc((100vw / 7) * 2);
      overflow: hidden;
    }

    &--3-of-7 {
      width: calc((100vw / 7) * 3);
      overflow: hidden;
    }

    &--4-of-7 {
      width: calc((100vw / 7) * 4);
      overflow: hidden;
    }

    &--5-of-7 {
      width: calc((100vw / 7) * 5);
      overflow: hidden;
    }

    &--6-of-7 {
      width: calc((100vw / 7) * 6);
      overflow: hidden;
    }

    &--7-of-7 {
      width: calc((100vw / 7) * 7);
      overflow: hidden;
    }
  }
}

.l-grid-container--7-col {
  position: relative;

  &::before {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin-right: auto;
    margin-left: auto;
    width: 100%;
    width: calc(100% - (2 * var(--offset)));
    //max-width: var(--max_width);
    min-height: 100vh;
    content: '';
    background-image: var(--background-columns);
    background-size: var(--background-width) 100%;
    z-index: 1000;
    pointer-events: none;
  }
}

/* Variables to display grid lines (for development only) */
:root {
  --offset: rem(0);
  --max_width: rem(1024);
  --columns: 7;
  --gutter: rem(1);
  --color: hsla(204, 80%, 72%, 0.25);
  --line-thickness: rem(15);
}

:root {
  --repeating-width: calc(100% / var(--columns));
  --column-width: calc((100% / var(--columns)) - var(--gutter));
  --background-width: calc(100% + var(--gutter));
  --background-columns: repeating-linear-gradient(
   to right,
   var(--color),
   var(--color) var(--line-thickness),
   transparent var(--line-thickness),
   transparent calc(var(--column-width) - var(--line-thickness)),
   var(--color) calc(var(--column-width) - var(--line-thickness)),
   var(--color) var(--column-width),
   transparent var(--column-width),
   transparent var(--repeating-width)
 );
}
