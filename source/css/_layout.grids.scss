/*------------------------------------*\
    $GRIDS
\*------------------------------------*/

/**
 * Grid Container
 */
.l-grid {
  //overflow: hidden;
}

/**
 * Grid Item
 */
.l-grid-item {
  width: 100%;
  img {
    display: block;
  }
  > * {
    width: 100%;
  }
  @include media('>medium') {
    &.left-gutter--l { padding-left: rem(30); }
    &.right-gutter--l { padding-right: rem(30); }
    &.left-gutter--xl { padding-left: rem(60); }
    &.right-gutter--xl { padding-right: rem(60); }
  }
}

/**
 * Flip column order
 */
.l-grid--flip-columns {
  @include media('>medium') {
    & > .l-grid-item:nth-child(1) {
      order: 2;
    }
    & > .l-grid-item:nth-child(2) {
      order: 1;
    }
  }
}

/**
 * Grid Item Held - Check the specific grids below for how long it's held.
 */
@mixin l-grid-item--hold {
  width: 100%;
  float: none;
  clear: both;
}

/**
 * Grid Uniform - For grids that should line up evenly (these grids should not
 * use <hr>'s to separate individual grid items).
 */
.l-grid--uniform {
  > .l-grid-item {
    border-bottom: $border-style-light;
  }
}

/**
 * Grid 1up
 */
.l-grid--1-col {
  .l-grid-item {
    width: 100%;
  }
}

/**
 * Grid 2up at medium width.
 */
.l-grid--2-col--at-medium {
  @include media('>medium') {
    display: flex;
    flex-wrap: wrap;
    width: 100%;

    > .l-grid-item {
      float: left;
      width: 50%;
      align-items: stretch;
      display: flex;
      margin-top: 0;

      // Slick slider hack for when a carousel is contained within a flexed element.
      * {
        min-height: 0;
        min-width: 0;
      }
    }

    &.with-divider {
      > .l-grid-item:nth-child(odd) {
        position: relative;

        &:after {
          content: "";
          position: absolute;
          right: 0;
          width: 1px;
          border-right: $border-style-light;
          height: 100%;
          z-index: 10;
        }
      }
    }
  }
}

/**
 * Grid 3up at medium width.
 */
.l-grid--3-col--at-medium {
  @include media('>medium') {
    display: flex;
    flex-wrap: wrap;
    width: 100%;

    > .l-grid-item {
      float: left;
      width: 33.3333%;
      align-items: stretch;
      display: flex;
      margin-top: 0;

      // Slick slider hack for when a carousel is contained within a flexed element.
      * {
        min-height: 0;
        min-width: 0;
      }
    }

    &.with-gutters {
      > .l-grid-item:nth-child(3n+1) {
        padding-right: $pad;
      }

      > .l-grid-item:nth-child(3n+2) {
        padding-left: $pad-half;
        padding-right: $pad-half;
      }

      > .l-grid-item:nth-child(3n+3) {
        padding-left: $pad;
      }
    }

    &.with-divider {
      > .l-grid-item:nth-child(3n+1), > .l-grid-item:nth-child(3n+2) {
        position: relative;

        &:after {
          content: "";
          position: absolute;
          right: 0;
          width: 1px;
          border-right: $border-style-light;
          height: 100%;
          z-index: 10;
        }
      }
    }
  }
}

/**
 * Grid 2up at medium width with 70/30 split.
 */
.l-grid--2-col--70-30--at-medium {
  @include media('>medium') {
    display: flex;
    flex-wrap: wrap;
    width: 100%;

    > .l-grid-item {
      float: left;
      align-items: stretch;
      display: flex;
      margin-top: 0;

      // Slick slider hack for when a carousel is contained within a flexed element.
      * {
        min-height: 0;
        min-width: 0;
      }

      &:first-child {
        width: 70%;
      }

      &:last-child {
        width: 30%;
      }
    }
  }
}

/**
 * Grid 2up at medium width with 35/65 split.
 */
.l-grid--2-col--35-65--at-medium {
  @include media('>medium') {
    display: flex;
    flex-wrap: wrap;
    width: 100%;

    > .l-grid-item {
      float: left;
      align-items: stretch;
      display: flex;
      margin-top: 0;

      &:first-child {
        width: 35%;
      }

      &:last-child {
        width: 65%;
      }
    }
  }
}

/**
 * Grid always 2 columns even
 */
.l-grid--2-col--split {
  display: flex;
  flex-wrap: wrap;
  width: 100%;

  > .l-grid-item {
    float: left;
    width: 50%;
    display: flex;
    flex-wrap: wrap;
    margin-top: 0;
  }
}

/**
 * Grid 4up
 */
.l-grid--4-col {
  width: 100%;

  > * {
    width: 25%;
  }
}

/**
 * Grid 7up
 */
.l-grid--7-col {
  width: 100%;

  > * {
    padding-left: $pad;
    padding-right: $pad;

    @include media('>medium') {
      width: calc(100vw/7);
    }
  }

  &--l--offset-1 {
    @include media('>large') {
      margin-left: calc(100vw/7);
    }
  }

  .l-grid-item--s {
    &--1-col {
      width: 100%;
    }
  }

  @include media('>medium') {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;

    .l-grid-item--m {
      &--1-col {
        width: calc((100vw/7) *1);
      }

      &--2-col {
        width: calc((100vw/7) *2);
      }

      &--3-col {
        width: calc((100vw/7) *3);
      }

      &--4-col {
        width: calc((100vw/7) *4);
      }

      &--5-col {
        width: calc((100vw/7) *5);
      }
    }
  }

  @include media('>large') {
    .l-grid-item--l {
      &--1-col {
        width: calc((100vw/7) *1);
      }

      &--2-col {
        width: calc((100vw/7) *2);
      }

      &--3-col {
        width: calc((100vw/7) *3);
      }

      &--4-col {
        width: calc((100vw/7) *4);
      }
    }
  }
}

.l-grid-wrap {
  @include media('>small') {
    &--1-of-7 {
      width: calc((100vw/7) *1);
      overflow: hidden;
    }

    &--2-of-7 {
      width: calc((100vw/7) *2);
      overflow: hidden;
    }

    &--3-of-7 {
      width: calc((100vw/7) *3);
      overflow: hidden;
    }

    &--4-of-7 {
      width: calc((100vw/7) *4);
      overflow: hidden;
    }

    &--5-of-7 {
      width: calc((100vw/7) *5);
      overflow: hidden;
    }

    &--6-of-7 {
      width: calc((100vw/7) *6);
      overflow: hidden;
    }

    &--7-of-7 {
      width: calc((100vw/7) *7);
      overflow: hidden;
    }
  }
}

.l-grid-container--7-col {
  position: relative;

  &::before {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin-right: auto;
    margin-left: auto;
    width: 100%;
    width: calc(100% - (2 * var(--offset)));
    //max-width: var(--max_width);
    min-height: 100vh;
    content: '';
    background-image: var(--background-columns);
    background-size: var(--background-width) 100%;
    z-index: 1000;
    pointer-events: none;
  }
}

/* Variables to display grid lines (for development only) */
:root {
  --offset: rem(0);
  --max_width: rem(1024);
  --columns: 7;
  --gutter: rem(1);
  --color: hsla(204, 80%, 72%, 0.25);
  --line-thickness: rem(20);
}

:root {
  --repeating-width: calc(100% / var(--columns));
  --column-width: calc((100% / var(--columns)) - var(--gutter));
  --background-width: calc(100% + var(--gutter));
  --background-columns: repeating-linear-gradient(
   to right,
   var(--color),
   var(--color) var(--line-thickness),
   transparent var(--line-thickness),
   transparent calc(var(--column-width) - var(--line-thickness)),
   var(--color) calc(var(--column-width) - var(--line-thickness)),
   var(--color) var(--column-width),
   transparent var(--column-width),
   transparent var(--repeating-width)
 );
}
